/*
 * Isagog Knowledge Graph Language Service
 * Isagog Knowledge Graph Language module
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ks-api@isagog.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.isagog.kg.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.isagog.kg.model.SemanticRelation;
import com.isagog.kg.model.SyntacticRelation;
import com.isagog.kg.model.TokenAnnotation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Token dependency
 */
@ApiModel(description = "Token dependency")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-07T11:03:37.116+02:00[Europe/Berlin]")
public class DependencyAnnotation extends TokenAnnotation {
  public static final String SERIALIZED_NAME_DTYPE = "dtype";
  @SerializedName(SERIALIZED_NAME_DTYPE)
  protected String dtype;

  public static final String SERIALIZED_NAME_GOVERNOR = "governor";
  @SerializedName(SERIALIZED_NAME_GOVERNOR)
  private Integer governor;

  public DependencyAnnotation() {
    this.dtype = this.getClass().getSimpleName();
  }

  public DependencyAnnotation dtype(String dtype) {
    
    this.dtype = dtype;
    return this;
  }

   /**
   * Get dtype
   * @return dtype
  **/
  @ApiModelProperty(required = true, value = "")

  public String getDtype() {
    return dtype;
  }


  public void setDtype(String dtype) {
    this.dtype = dtype;
  }


  public DependencyAnnotation governor(Integer governor) {
    
    this.governor = governor;
    return this;
  }

   /**
   * Head index of the governor&#39;s token
   * minimum: 0
   * @return governor
  **/
  @ApiModelProperty(required = true, value = "Head index of the governor's token")

  public Integer getGovernor() {
    return governor;
  }


  public void setGovernor(Integer governor) {
    this.governor = governor;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DependencyAnnotation dependencyAnnotation = (DependencyAnnotation) o;
    return Objects.equals(this.dtype, dependencyAnnotation.dtype) &&
        Objects.equals(this.governor, dependencyAnnotation.governor) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dtype, governor, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DependencyAnnotation {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    dtype: ").append(toIndentedString(dtype)).append("\n");
    sb.append("    governor: ").append(toIndentedString(governor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

