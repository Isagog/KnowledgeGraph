/*
 * Isagog Knowledge Graph Language Service
 * Isagog Knowledge Graph Language module
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ks-api@isagog.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.isagog.kg.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Dependendency tag (Universal Dependencies)
 */
@JsonAdapter(SyntacticDependency.Adapter.class)
public enum SyntacticDependency {
  
  ACL("ACL"),
  
  ADVCL("ADVCL"),
  
  ADVMOD("ADVMOD"),
  
  AMOD("AMOD"),
  
  APPOS("APPOS"),
  
  AUX("AUX"),
  
  CASE("CASE"),
  
  CC("CC"),
  
  CCOMP("CCOMP"),
  
  CLF("CLF"),
  
  COMPOUND("COMPOUND"),
  
  CONJ("CONJ"),
  
  COP("COP"),
  
  CSUBJ("CSUBJ"),
  
  DEP("DEP"),
  
  DET("DET"),
  
  DISCOURSE("DISCOURSE"),
  
  DISLOCATED("DISLOCATED"),
  
  EXPL("EXPL"),
  
  FIXED("FIXED"),
  
  FLAT("FLAT"),
  
  GOESWITH("GOESWITH"),
  
  IOBJ("IOBJ"),
  
  LIST("LIST"),
  
  MARK("MARK"),
  
  NMOD("NMOD"),
  
  NSUBJ("NSUBJ"),
  
  NUMMOD("NUMMOD"),
  
  OBJ("OBJ"),
  
  OBL("OBL"),
  
  ORPHAN("ORPHAN"),
  
  PARATAXIS("PARATAXIS"),
  
  PUNCT("PUNCT"),
  
  REPARANDUM("REPARANDUM"),
  
  ROOT("ROOT"),
  
  VOCATIVE("VOCATIVE"),
  
  XCOMP("XCOMP"),
  
  OTHER("OTHER");

  private String value;

  SyntacticDependency(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static SyntacticDependency fromValue(String value) {
    for (SyntacticDependency b : SyntacticDependency.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<SyntacticDependency> {
    @Override
    public void write(final JsonWriter jsonWriter, final SyntacticDependency enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SyntacticDependency read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return SyntacticDependency.fromValue(value);
    }
  }
}

