openapi: 3.0.2
info:
  title: Isagog Knowledge Graph Language Service
  version: 1.0.0
  description: Isagog Knowledge Graph Language module
  contact:
    name: Isagog Srl
    email: ks-api@isagog.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost
    variables:
      port:
        default: 3200
      basePath:
        default: /
tags:

  - name: LinguisticService
    description: NLP analitic functionalities

paths:

 /language/analyze:
   $ref: kg-openapi.yaml#/language/analyze

components:
  schemas:

    Sentence:
      description: A single sentence
      type: object
      required:
        - verbatim
      properties:
        lang:
          description: Language
          type: string
          enum:
            - en
            - es
            - fr
            - it
            - de
        verbatim:
          description: Textual content
          type: string
        context:
          description: Textual context (opt)
          type: string


    Classification:
        description: Text general classification (e.g. intent or sentiment)
        type: object
        required:
          - classifier
        properties:
          classifier:
            type: string
          support:
            type: number
            format: double
            minimum: 0.0
            maximum: 1.0


    SentenceAnnotation:
        description: Text annotation
        allOf:
          - $ref: '#/components/schemas/Sentence'
        type: object
        properties:
          classes:
            description: Text classification
            type: array
            items:
              $ref: '#/components/schemas/Classification'
          tokens:
            description: Basic token annotation
            type: array
            items:
              $ref: '#/components/schemas/BasicAnnotation'
          entities:
            description: Entity annotation
            type: array
            items:
              $ref: '#/components/schemas/EntityAnnotation'
          dependencies:
            description: Dependencies
            type: array
            items:
              $ref: '#/components/schemas/DependencyAnnotation'


    TokenAnnotation:
      description: Base class for token annotations, should be abstract
      type: object
      required:
        - token
        - offset
      properties:
        token:
          type: string
        offset:
          description: Head character offset
          type: integer
          format: int32
          minimum: 0
        support:
          type: number
          format: double

    BasicAnnotation:
        description: Pos and lemma annotation
        type: object
        required:
          - pos
          - lemma
        allOf:
          - $ref: '#/components/schemas/TokenAnnotation'
        properties:
          pos:
            description: Part of speech
            type: string
            enum:
              - ADJ #adjective
              - ADP #adposition
              - ADV #adverb
              - AUX #auxiliary
              - CCONJ #coordinating conjunction
              - DET #determiner
              - INTJ #interjection
              - NOUN #noun
              - NUM #numeral
              - PART #particle
              - PRON #pronoun
              - PROPN #proper noun
              - PUNCT #punctuation
              - SCONJ #subordinating conjunction
              - SYM #symbol
              - VERB #verb
              - X #other
          features:
            description: Grammatical features
            type: array
            items:
              $ref: '#/components/schemas/GrammarFeature'
          lemma:
            description: Base form
            type: string


    EntityAnnotation:
        description: Entity classifier and\or link
        allOf:
          - $ref: '#/components/schemas/TokenAnnotation'
        type: object
        properties:
          classes:
            description: Text classification
            type: array
            items:
              $ref: '#/components/schemas/Classification'
          links:
            type: array
            items:
              type: string
              format: uri


    DependencyAnnotation:
        description: Token dependency
        allOf:
          - $ref: '#/components/schemas/TokenAnnotation'
        type: object
        required:
          - governor
        properties:
          governor:
            description: Head index of the governor's token
            type: integer
            format: int32
            minimum: 0
          syntax:
            description: Governor's syntactic role
            type: string
            enum:
              - acl	    # clausal modifier of noun (adjectival clause)
              - advcl	# adverbial clause modifier
              - advmod	# adverbial modifier
              - amod	# adjectival modifier
              - appos	# appositional modifier
              - aux	    # auxiliary
              - case	# case marking
              - cc	    # coordinating conjunction
              - ccomp	# clausal complement
              - clf	    # classifier
              - compound	# compound
              - conj	# conjunct
              - cop	    # copula
              - csubj	# clausal subject
              - dep	    # unspecified dependency
              - det	    # determiner
              - discourse	# discourse element
              - dislocated	# dislocated elements
              - expl	# expletive
              - fixed	# fixed multiword expression
              - flat	# flat multiword expression
              - goeswith	# goes with
              - iobj	# indirect object
              - list	# list
              - mark	# marker
              - nmod	# nominal modifier
              - nsubj	# nominal subject
              - nummod	# numeric modifier
              - obj  	# object
              - obl	    # oblique nominal
              - orphan	# orphan
              - parataxis	# parataxis
              - punct	# punctuation
              - reparandum	# overridden disfluency
              - root	# root
              - vocative	# vocative
              - xcomp	# open clausal complement

          semantics:
            $ref: '#/components/schemas/SemanticRelation'


    SemanticRelation:
      description: Governor's semantic role
      type: object
      required:
          - predicate
          - role
      properties:
          predicate:
            description: Ontology predicate (relation or attribute)
            type: string
            format: id
          role:
            description: Governor's predicative role (subject or object)
            type: string
            enum:
              - SUBJECT
              - OBJECT

    GrammarFeature:
      description: Grammatic feature
      type: object
      properties:
        attribute:
          type: string
          enum:
            - NUMBER
            - PERSON
            - TENSE
            - MODE
            - NOUN-TYPE
            - VERB-TYPE
            - ADV-TYPE
            - ADJ-TYPE
            - X #other
        value:
          type: string

    SentenceRanking:
      description: Sentence ranking record
      type: object
      required:
        - sentence
      properties:
        sentence:
          $ref: '#/components/schemas/Sentence'
        support:
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0



