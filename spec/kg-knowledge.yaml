openapi: 3.0.2
info:
  title: Isagog Knowledge Graph Service
  version: 1.0.0
  description: Isagog Knowledge Graph endpoint
  contact:
    email: ks-api@isagog.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost
    variables:
      port:
        default: '3200'
      basePath:
        default: /kg
tags:

  - name: KnowledgeService
    description: Ontology and inference functionalities

paths:

  /knowledge/search:
    get:
      summary: Knowledge search
      description: Search knowledge items
      operationId: search
      parameters:
        - name: query
          in: query
          description: The query to search by
          required: true
          explode: false
          schema:
            type: string
        - name: details
          in: query
          description: 'Details to be returned: full=full hierarchy, summary=direct super\subordinates, none=id only'
          schema:
            type: string
            enum:
              - full
              - summary
              - none
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeElement'
        201:
          description: No results
        401:
          description: Unknown graph
        402:
          description: Invalid key
        501:
          description: Service unavailable
        502:
          description: Server error
      tags:
        - KnowledgeService


  /knowledge/evaluate:
    post:
      summary: Entity evaluation
      description: Evaluates an entity as an instance of known concepts
      parameters:
        - name: method
          in: query
          required: false
          schema:
            type: string
            enum:
              - DEDUCTION
              - ABDUCTION
            default: DEDUCTION
          description: Inference method to be used
          allowEmptyValue: true
      operationId: evaluateEntity
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeRanking'
        401:
          description: Not found
        402:
          description: Unknown graph
        403:
          description: Invalid arguments
        501:
          description: Service unavailable
        502:
          description: Server error
      requestBody:
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/Entity'
        description: Entity specification
        required: true
      tags:
        - KnowledgeService

  /knowledge/frame:
    post:
      summary: Frame extraction
      description: Extract frames from an annotated text
      parameters:
        - name: source
          in: query
          schema:
            type: string
            enum:
              - json
              - rdf
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      operationId: extractFrames
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeRanking'
        403:
          description: Invalid arguments
        501:
          description: Service unavailable
        502:
          description: Server error
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: UTF-8
      tags:
        - KnowledgeService


  /knowledge/assert:
    post:
      summary: Statement assertion
      description: Asserts a statement in a Knowledge Graph
      parameters:
        - name: kg
          in: query
          required: true
          schema:
            type: string
          description: Assertion context (KG id)
      operationId: assertStatement
      responses:
        200:
          description: Success
        401:
          description: Unknown graph
        402:
          description: Malformed statement
        403:
          description: Unsupported statement
        501:
          description: Service unavailable
        502:
          description: Server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Statement'
        description: Assertion statement
        required: true
      tags:
        - KnowledgeService


  /knowledge/retract:
      post:
        summary: Statement retraction
        description: Retracts a statement and all the statements depending on it
        parameters:
          - name: kg
            in: query
            required: true
            schema:
              type: string
        operationId: retractStatement
        responses:
          200:
            description: Success
          401:
            description: Unknown graph
          402:
            description: Malformed statement
          403:
            description: Unsupported statement
          501:
            description: Service unavailable
          502:
            description: Server error
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statement'
          description: Retraction statement
          required: true
        tags:
          - KnowledgeService


components:
  schemas:
        KnowledgeGraph:
          description: Set of statements about conceptualized entities
          required:
            - id
          type: object
          properties:
            id:
              description: Knowledge Graph id
              type: string
              format: id
            sources:
              description: KG sources
              type: array
              items:
                type: string
                format: uri
            description:
              description: KG description
              type: string
            size:
              description: Statement number
              type: integer
              format: int32
            ontologies:
              description: Ontologies where concepts and relations are defined (URIs)
              type: array
              items:
                type: string
                format: uri
            context:
              description: Other graphs providing contextual knowledge
              type: array
              items:
                type: string
                format: id
            content:
              description: KG content (statements)
              type: array
              items:
                $ref: '#/components/schemas/EntityStatement'
            annotations:
              description: KG annotation (application specific)
              type: array
              items:
                $ref: '#/components/schemas/KnowledgeAnnotation'




        KnowledgeAnnotation:
          description: Annotation
          required:
            - property
            - value
          type: object
          properties:
            property:
              description: The annotation property
              type: string
            value:
              description: The annotation
              type: string
              format: byte


        KnowledgeRanking:
          description: Knowledge Element ranking record
          type: object
          required:
            - element
          properties:
            element:
              $ref: '#/components/schemas/KnowledgeElement'
            rank:
              type: integer
            support:
              $ref: '#/components/schemas/Support'


        KnowledgeElement:
          description: Managed knowledge element (should be abstract)
          type: object
          required:
            - ktype
          properties:
            ktype:
              type: string
              enum:
                - AtomicConcept
                - RelationalConcept
                - AttributiveConcept
                - Relation
                - Entity
                - ConceptStatement
                - EntityStatement
                - ClassificationStatement
                - RelationalStatement
                - AttributiveStatement
                - Frame
            annotations:
              type: array
              items:
                $ref: '#/components/schemas/KnowledgeAnnotation'
          discriminator:
            propertyName: ktype
            mapping:
              AtomicConcept: '#/components/schemas/AtomicConcept'
              RelationalConcept: '#/components/schemas/RelationalConcept'
              AttributiveConcept: '#/components/schemas/AttributiveConcept'
              Relation: '#/components/schemas/Relation'
              Attribute: '#/components/schemas/Attribute'
              Entity: '#/components/schemas/Entity'
              ConceptStatement: '#/components/schemas/ConceptStatement'
              EntityStatement: '#/components/schemas/EntityStatement'
              ClassificationStatement: '#/components/schemas/ClassificationStatement'
              RelationalStatement: '#/components/schemas/RelationalStatement'
              AttributiveStatement: '#/components/schemas/AttributiveStatement'
              Frame: '#/components/schemas/Frame'

        AtomicConcept:
          description: Unary atomic classifier
          allOf:
            - $ref: '#/components/schemas/KnowledgeElement'
          type: object
          required:
            - id
          properties:
            id:
              type: string
              format: id

            statements:
              type: array
              items:
                $ref: '#/components/schemas/ConceptStatement'

        RelationalConcept:
          description: Unary relational classifier
          allOf:
            - $ref: '#/components/schemas/KnowledgeElement'
          type: object
          required:
            - relation
            - quantifier
          properties:
            relation:
              type: string
              format: id
            restriction:
              type: string
            quantifier:
              type: string
              enum:
                - SOME
                - ALL
                - ATLEAST1
                - ATMOST1

        AttributiveConcept:
          description: Unary attributive classifier
          allOf:
            - $ref: '#/components/schemas/KnowledgeElement'
          type: object
          required:
            - attribute
          properties:
            attribute:
              type: string
              format: id
            value:
              type: string
              format: byte
            constraint:
              type: string
              enum:
                - SOME
                - EQUALS
                - GREATER_THAN
                - SMALLER_THAN
              default: SOME


        Relation:
          description: Class of entity pairs
          allOf:
            - $ref: '#/components/schemas/KnowledgeElement'
          required:
            - id
          properties:
            id:
              type: string
              format: id


        Attribute:
          description: Class of Entity-value pairs
          allOf:
            - $ref: '#/components/schemas/KnowledgeElement'
          required:
            - id
          properties:
            id:
              type: string
              format: id


        Entity:
          description: Individual entity
          allOf:
            - $ref: '#/components/schemas/KnowledgeElement'
          type: object
          required:
            - id
          properties:
            id:
              type: string
              format: id
            statements:
              type: array
              items:
                $ref: '#/components/schemas/EntityStatement'

        Statement:
          description: Knowledge statement
          allOf:
            - $ref: '#/components/schemas/KnowledgeElement'
          type: object
          required:
            - subject
          properties:
            subject:
              type: string
              format: id
            privacy:
              type: string
              enum:
                - OWNER
                - TRUSTED
                - CONTACTS
                - PUBLIC
              default: OWNER
            support:
              $ref: '#/components/schemas/Support'

        ConceptStatement:
          description: Conceptual assertion
          allOf:
            - $ref: '#/components/schemas/Statement'
          type: object
          required:
            - object
            - predicate
          properties:
            object:
              type: string
              format: id
            predicate:
              type: string
              enum:
                - INCLUSION
                - DISJUNCTION
                - EQUIVALENCE


        EntityStatement:
          description: Individual assertion
          allOf:
            - $ref: '#/components/schemas/Statement'


        ClassificationStatement:
          description: Entity classification
          allOf:
            - $ref: '#/components/schemas/EntityStatement'
          type: object
          required:
            - concept
          properties:
            concept:
              type: string
              format: id

        RelationalStatement:
          description: Entity relatedness
          allOf:
            - $ref: '#/components/schemas/EntityStatement'
          type: object
          required:
            - relation
            - entity
          properties:
            relation:
              description: Ontology relation
              type: string
              format: id
            entity:
              description: Related entity
              type: string
              format: id


        AttributiveStatement:
          description: Entity attribute
          allOf:
            - $ref: '#/components/schemas/EntityStatement'
          type: object
          required:
            - attribute
            - values
          properties:
            attribute:
              description: Ontology attribute
              type: string
              format: id
            values:
              description: Attribute values
              type: array
              items:
                type: string
                format: byte


        Frame:
          description: Frame type
          allOf:
            - $ref: '#/components/schemas/KnowledgeElement'
          type: object
          required:
            - slots
          properties:
            slots:
              description: List of conceptual elements
              type: array
              items:
                $ref: '#/components/schemas/Slot'


        Slot:
          description: Framed conceptual element
          type: object
          required:
            - id
            - stype
            - ontologyReference
            - mandatory
            - distinguished
            - lexicalAnnotations
            - values
          properties:
            id:
              description: Slot identifier, must be univoque in the frame
              type: string
            stype:
              type: string
              enum:
                - ConceptualSlot
                - RelationalSlot
                - AttributiveSlot
            mandatory:
              description: A slot that must be instantiated
              type: boolean
              default: false
            distinguished:
              description: A slot that has a specific pragmatic role
              type: boolean
              default: false
            informative:
              description: A slot that must be presented to consumers
              type: boolean
              default: false
            ontologyReference:
              description: Ontology element linked to the slot
              type: string
              format: id
          discriminator:
            propertyName: stype
            mapping:
              ConceptualSlot: '#/components/schemas/ConceptualSlot'
              RelationalSlot: '#/components/schemas/RelationalSlot'
              AttributiveSlot: '#/components/schemas/AttributiveSlot'

        FrameInstance:
          description: Frame instance
          type: object
          required:
            - ftype
          properties:
            ftype:
              description: Frame type identifier
              type: string
              format: id
            slotValues:
              type: array
              items:
                $ref: '#/components/schemas/SlotValue'

        SlotSentenceMapping:
          type: object
          required:
            - startIndex
            - endIndex
          properties:
            startIndex:
              type: integer
              format: int32
            endIndex:
              type: integer
              format: int32

        ConceptualSlot:
          allOf:
            - $ref: '#/components/schemas/Slot'

        RelationalSlot:
          allOf:
            - $ref: '#/components/schemas/Slot'
          type: object
          properties:
            subjectBinding:
              description: The id of the slot representing the Attribute's subject
              type: string
            objectBinding:
              type: string
              format: id
          required:
            - subjectBinding

        AttributiveSlot:
          allOf:
            - $ref: '#/components/schemas/Slot'
          type: object
          description: A slot bound to an Attribute (data property)
          properties:
            subjectBinding:
              description: The id of the slot representing the Attribute's subject
              type: string
              format: id
            valueType:
              description: Semantics of the Attribute's value
              type: string
              enum:
                - STRING
                - NUMBER
                - TEXT
                - DATE
                - MONEY
                - LOCATION
                - NAME
                - ANY
              default: ANY
            comparation:
              description: The comparison operator when instantiated
              type: string
              enum:
                - EQUAL
                - GREATER
                - SMALLER
                - SIMILAR
                - UNDEFINED
              default: UNDEFINED
          required:
            - subjectBinding

        SlotValue:
          description: Slot value instance
          type: object
          required:
            - slotTypeId
            - value
          properties:
            slotTypeId:
              description: Slot type's identifier
              type: string
              format: id
            sourceType:
              description: The value provenance
              type: string
              enum:
                - USER_INPUT
                - KNOWLEGDE_BASE
                - UNDEFINED
              default: UNDEFINED
            value:
              type: string
              format: byte
            support:
              $ref: '#/components/schemas/Support'


        Support:
          type: object
          description: Knowledge support score
          required:
            - evidence
            - confidence
          properties:
            evidence:
              description: Evidence score [1=Positive evidence, 0=Negative evidence]
              type: number
              format: double
              default: 0.5
            confidence:
              description: Confidence score [1=Full confidence, 0=No confidence]
              type: number
              format: double
              default: 0.5
