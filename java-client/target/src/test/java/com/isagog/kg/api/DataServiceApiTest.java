/*
 * Isagog Knowledge Graph Data Service
 * Isagog Knowledge Graph Data module
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ks-api@isagog.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.isagog.kg.api;

import com.isagog.kg.ApiException;
import com.isagog.kg.model.Entity;
import com.isagog.kg.model.EntityStatement;
import com.isagog.kg.model.QueryExpression;
import com.isagog.kg.model.QueryFrame;
import com.isagog.kg.model.QueryKeywords;
import com.isagog.kg.model.QueryResponse;
import com.isagog.kg.model.Upload;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataServiceApi
 */
@Ignore
public class DataServiceApiTest {

    private final DataServiceApi api = new DataServiceApi();

    
    /**
     * Entity creation
     *
     * Creates a new entity uri and related statements
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEntityTest() throws ApiException {
        Entity entity = null;
        api.createEntity(entity);

        // TODO: test validations
    }
    
    /**
     * Entity statement creation
     *
     * Creates a new entity statement
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createStatementTest() throws ApiException {
        EntityStatement entityStatement = null;
        api.createStatement(entityStatement);

        // TODO: test validations
    }
    
    /**
     * Entity deletion
     *
     * Deletes an entity and related statements
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteEntityTest() throws ApiException {
        String id = null;
        api.deleteEntity(id);

        // TODO: test validations
    }
    
    /**
     * Statement deletion
     *
     * Deletes a Statement
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteStatementTest() throws ApiException {
        EntityStatement entityStatement = null;
        api.deleteStatement(entityStatement);

        // TODO: test validations
    }
    
    /**
     * Element access
     *
     * Returns a KnowledgeElement
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEntityTest() throws ApiException {
        String id = null;
        String details = null;
        Entity response = api.getEntity(id, details);

        // TODO: test validations
    }
    
    /**
     * Knowledge query
     *
     * Queries a Knowledge Graph
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryExpressionTest() throws ApiException {
        QueryExpression queryExpression = null;
        String kg = null;
        QueryResponse response = api.queryExpression(queryExpression, kg);

        // TODO: test validations
    }
    
    /**
     * Knowledge query
     *
     * Queries a Knowledge Graph
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryFrameTest() throws ApiException {
        QueryFrame queryFrame = null;
        String kg = null;
        QueryResponse response = api.queryFrame(queryFrame, kg);

        // TODO: test validations
    }
    
    /**
     * Knowledge query
     *
     * Queries a Knowledge Graph
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryKeywordsTest() throws ApiException {
        QueryKeywords queryKeywords = null;
        String kg = null;
        QueryResponse response = api.queryKeywords(queryKeywords, kg);

        // TODO: test validations
    }
    
    /**
     * Bulk upload
     *
     * Uploads a resource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadTest() throws ApiException {
        String kg = null;
        Upload upload = null;
        api.upload(kg, upload);

        // TODO: test validations
    }
    
}
