/*
 * Isagog Knowledge Graph Interaction Service
 * Isagog Knowledge Graph Interaction module
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ks-api@isagog.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.isagog.kg.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.isagog.kg.model.BasicAnnotation;
import com.isagog.kg.model.DependencyAnnotation;
import com.isagog.kg.model.EntityAnnotation;
import com.isagog.kg.model.SemanticRelation;
import com.isagog.kg.model.SyntacticRelation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Base class for token annotations, should be abstract
 */
@ApiModel(description = "Base class for token annotations, should be abstract")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-23T10:03:52.590+01:00[Europe/Berlin]")
public class TokenAnnotation {
  public static final String SERIALIZED_NAME_TTYPE = "ttype";
  @SerializedName(SERIALIZED_NAME_TTYPE)
  protected String ttype;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_SUPPORT = "support";
  @SerializedName(SERIALIZED_NAME_SUPPORT)
  private Double support;

  public TokenAnnotation() {
    this.ttype = this.getClass().getSimpleName();
  }

  public TokenAnnotation ttype(String ttype) {
    
    this.ttype = ttype;
    return this;
  }

   /**
   * Token type
   * @return ttype
  **/
  @ApiModelProperty(required = true, value = "Token type")

  public String getTtype() {
    return ttype;
  }


  public void setTtype(String ttype) {
    this.ttype = ttype;
  }


  public TokenAnnotation token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(required = true, value = "")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public TokenAnnotation offset(Integer offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * Head character offset
   * minimum: 0
   * @return offset
  **/
  @ApiModelProperty(required = true, value = "Head character offset")

  public Integer getOffset() {
    return offset;
  }


  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public TokenAnnotation support(Double support) {
    
    this.support = support;
    return this;
  }

   /**
   * Get support
   * @return support
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getSupport() {
    return support;
  }


  public void setSupport(Double support) {
    this.support = support;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenAnnotation tokenAnnotation = (TokenAnnotation) o;
    return Objects.equals(this.ttype, tokenAnnotation.ttype) &&
        Objects.equals(this.token, tokenAnnotation.token) &&
        Objects.equals(this.offset, tokenAnnotation.offset) &&
        Objects.equals(this.support, tokenAnnotation.support);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ttype, token, offset, support);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenAnnotation {\n");
    sb.append("    ttype: ").append(toIndentedString(ttype)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    support: ").append(toIndentedString(support)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

