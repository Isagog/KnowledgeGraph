/*
 * Isagog Knowledge Graph Service
 * Isagog Knowledge Graph Service API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ks-api@isagog.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.isagog.kg.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.isagog.kg.model.AttributiveSlot;
import com.isagog.kg.model.ConceptualSlot;
import com.isagog.kg.model.RelationalSlot;
import com.isagog.kg.model.Slot;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * RelationalSlot
 */
@JsonPropertyOrder({
  RelationalSlot.JSON_PROPERTY_SUBJECT_BINDING,
  RelationalSlot.JSON_PROPERTY_OBJECT_BINDING
})
@JsonTypeName("RelationalSlot")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-10-01T15:11:01.505608900+02:00[Europe/Berlin]")
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = "stype", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = AttributiveSlot.class, name = "AttributiveSlot"),
  @JsonSubTypes.Type(value = ConceptualSlot.class, name = "ConceptualSlot"),
  @JsonSubTypes.Type(value = RelationalSlot.class, name = "RelationalSlot"),
})

public class RelationalSlot extends Slot {
  public static final String JSON_PROPERTY_SUBJECT_BINDING = "subjectBinding";
  private String subjectBinding;

  public static final String JSON_PROPERTY_OBJECT_BINDING = "objectBinding";
  private String objectBinding;


  public RelationalSlot subjectBinding(String subjectBinding) {
    
    this.subjectBinding = subjectBinding;
    return this;
  }

   /**
   * The id of the slot representing the Attribute&#39;s subject
   * @return subjectBinding
  **/
  @ApiModelProperty(required = true, value = "The id of the slot representing the Attribute's subject")
  @JsonProperty(JSON_PROPERTY_SUBJECT_BINDING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubjectBinding() {
    return subjectBinding;
  }


  public void setSubjectBinding(String subjectBinding) {
    this.subjectBinding = subjectBinding;
  }


  public RelationalSlot objectBinding(String objectBinding) {
    
    this.objectBinding = objectBinding;
    return this;
  }

   /**
   * Get objectBinding
   * @return objectBinding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OBJECT_BINDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getObjectBinding() {
    return objectBinding;
  }


  public void setObjectBinding(String objectBinding) {
    this.objectBinding = objectBinding;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RelationalSlot relationalSlot = (RelationalSlot) o;
    return Objects.equals(this.subjectBinding, relationalSlot.subjectBinding) &&
        Objects.equals(this.objectBinding, relationalSlot.objectBinding) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subjectBinding, objectBinding, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RelationalSlot {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    subjectBinding: ").append(toIndentedString(subjectBinding)).append("\n");
    sb.append("    objectBinding: ").append(toIndentedString(objectBinding)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

